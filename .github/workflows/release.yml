name: Release
on:
  create:
    tags:
      - "!v**"
      - "!**alpha**"
      - "!**beta**"

    branches:
      - "releases/**"
    #   - '!releases/**-alpha'

jobs:
  tag:
    runs-on: ubuntu-18.04
    steps:
      - name: Extract tag name
        id: tag
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\//, '');
      # - name: Echo Tag
      #   run: echo ${{ steps.tag.outputs.result }}
      - name: Store tag in env
        run: echo "Release branch has been tagged with ${TAG_VERSION}"
        env:
          TAG_VERSION: ${{ steps.tag.outputs.result }}
      # - name: Echo env tag
      #   run: echo "Env tag ${{ env.TAG_VERSION }}"
      # - name: Echo env tag 2
      #   run: echo ${{ env.TAG_VERSION }}

  build-test:
    needs: tag
    runs-on: macos-latest
    timeout-minutes: 15

    steps:
      - name: Cancel previous jobs
        uses: styfle/cancel-workflow-action@0.9.0
        with:
          access_token: ${{ github.token }}

      - name: Git - Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Select Xcode Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: id_rsa_github_actions
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.6"

      - name: Install Bundler
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      # - name: Test - Fastlane tests
      #   run: bundle exec fastlane tests

      - name: Create Firebase Service Credentials file
        run: |
          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json.b64
          base64 -d -i firebase_credentials.json.b64 > firebase_credentials.json
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

      - name: Distribute internally on Firebase & Appetize ðŸš€
        run: |
          bundle exec fastlane release
        env:
          FIREBASE_APP_ID: ${{ secrets.FIREBASE_APP_ID }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.SSH_KEY }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
          FASTLANE_SESSION: ${{ secrets.FASTLANE_SESSION }}
          MATCH_KEYCHAIN_NAME: ${{ secrets.MATCH_KEYCHAIN_NAME }}
          MATCH_KEYCHAIN_PASSWORD: ${{ secrets.MATCH_KEYCHAIN_PASSWORD }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          APPETIZE_API_TOKEN: ${{ secrets.APPETIZE_API_TOKEN }}

  # deploy:
  #   needs: build-test
  #   runs-on: macOS-latest

  #   steps:
  #     - uses: actions/checkout@v1

  #     - name: Install Cocoapods
  #       run: gem install cocoapods

  #     - name: Deploy to Cocoapods
  #       run: |
  #         set -eo pipefail
  #         export LIB_VERSION=$(git describe --tags `git rev-list --tags --max-count=1`)
  #         pod lib lint --allow-warnings

  #       env:
  #         COCOAPODS_TRUNK_TOKEN: ${{ secrets.COCOAPODS_TRUNK_TOKEN }}

  # merge-branch:
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master

  #     - name: Merge release -> master
  #       uses: devmasx/merge-branch@v1.3.1
  #       with:
  #         type: now
  #         target_branch: dev_test
  #         github_token: ${{ github.token }}
